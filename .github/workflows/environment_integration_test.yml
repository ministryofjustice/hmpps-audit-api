name: environment_integration_test.yml

on:
  workflow_call:
    inputs:
      env_test_url:
        required: true
        type: string
      job_name:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      OAUTH_CLIENT_ID:
        required: true
      OAUTH_CLIENT_SECRET:
        required: true
      OAUTH_TOKEN_URL:
        required: true

permissions:
  contents: read

jobs:
  run-integration-test:
    name: ${{ inputs.job_name }}
    environment: ${{ inputs.environment }}
    runs-on: [self-hosted, hmpps-github-actions-runner]
    env:
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      OAUTH_TOKEN_URL: ${{ secrets.OAUTH_TOKEN_URL }}
      ENV_TEST_URL: ${{ inputs.env_test_url }}
    steps:
      - name: Get OAuth token
        id: get_token
        shell: bash
        run: |
          BASIC_AUTH=$(echo -n "$OAUTH_CLIENT_ID:$OAUTH_CLIENT_SECRET" | base64 | tr -d '\n')
          RESPONSE=$(curl --fail --verbose -s -X POST "$OAUTH_TOKEN_URL?grant_type=client_credentials" \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $BASIC_AUTH")
          TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to extract access token."
            echo "Response was: $RESPONSE"
            exit 1
          fi
          echo "::add-mask::$TOKEN"
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Step 1 - Create audit event
        id: create_event
        run: |
          RESPONSE=$(curl --fail --verbose --silent --show-error \
            -X POST "$ENV_TEST_URL/internal/integration-test/audit-event" \
            -H "Authorization: Bearer ${{ steps.get_token.outputs.token }}" \
            -H "Content-Type: application/json")
          
          echo "Audit event response: $RESPONSE"
          echo "$RESPONSE" > audit_event.json

      - name: Step 2 - Trigger repair partitions
        id: trigger_repair
        run: |
          RESPONSE=$(curl --fail --silent -X POST "$ENV_TEST_URL/audit/query/repair-partitions" \
            -H "Authorization: Bearer ${{ steps.get_token.outputs.token }}" \
            -H "Content-Type: application/json")
          
          echo "Repair response: $RESPONSE"
          echo "$RESPONSE" > repair_response.json
          
          QUERY_EXECUTION_ID=$(echo "$RESPONSE" | jq -r '.queryExecutionId')
          
          if [ -z "$QUERY_EXECUTION_ID" ] || [ "$QUERY_EXECUTION_ID" = "null" ]; then
            echo "Failed to extract queryExecutionId."
            exit 1
          fi
          
          echo "queryExecutionId=$QUERY_EXECUTION_ID" >> $GITHUB_OUTPUT
